using UnityEngine;using System.Collections;using UnityEngine.UI;using UnityEngine.SceneManagement;public class L1S1ManagerScript : MonoBehaviour {    public static int counter;    //Store references to gameobjects    public GameObject RecordButton;    public GameObject StopRecord;    public GameObject AnswersPanel;    public GameObject KrKeyboard;    public GameObject RatingsText;    public GameObject WordCounter;    public GameObject RecordedButton;    public int sizeofSet;	// Use this for initialization	void Start () {
        //Find Gameobjects and store into references
        //AnswersPanel = GameObject.Find("AnswersPanel");
        //RecordButton = GameObject.Find("RecordButton");
        //StopRecord = GameObject.Find("StopRecord");
        //Deactive stop button
        KrKeyboard.SetActive(false);        StopRecord.SetActive(false);        counter = 0;        UIManagerScript.FlashCard fc = (UIManagerScript.FlashCard)UIManagerScript.set[counter];        sizeofSet = UIManagerScript.set.Count;        GameObject answerText = GameObject.Find("AnswerText");        Text answer = answerText.GetComponent<Text>();        answer.text = fc.enWord + "\n(" + fc.enType + ")";        GameObject krText = GameObject.Find("krText");        Text kr = krText.GetComponent<Text>();        RatingsText.GetComponent<Text>().text = fc.totalRating1 + "\n" + fc.totalRating2 + "\n" + fc.totalRating3;        kr.text = fc.krWord;        print(fc.fcid);        loadImage(fc.fcid);        loadAudio(fc.fcid);        GameObject levelLabel = GameObject.Find("LevelLabel");        WordCounter.GetComponent<Text>().text = "1/" + sizeofSet;        levelLabel.GetComponent<Text>().text = UIManagerScript.CurrentLevel;        HideAnswers();    }		// Update is called once per frame	void Update () {		}    public void SubmitAnswers()    {    //GameObject enAnswer;    //enAnswer = GameObject.Find("EngInput");    //Text enTextAnswer = enAnswer.GetComponent<Text>();    }    public void Rating1()    {        //User indicated Rating1 for this word, so update the appropriate field and ShowNext()        UIManagerScript.FlashCard fc = (UIManagerScript.FlashCard)UIManagerScript.set[counter];        fc.totalRating1++;        ShowNext();    }    public void Rating2()    {        //User indicated Rating2 for this word, so update the appropriate field and ShowNext()        UIManagerScript.FlashCard fc = (UIManagerScript.FlashCard)UIManagerScript.set[counter];        fc.totalRating2++;        ShowNext();    }    public void Rating3()    {        //User indicated Rating3 for this word, so update the appropriate field and ShowNext()        UIManagerScript.FlashCard fc = (UIManagerScript.FlashCard)UIManagerScript.set[counter];        fc.totalRating3++;        ShowNext();    }    public void ClearFields()    {        GameObject typeInput = GameObject.Find("TypeInput");        InputField type = typeInput.gameObject.GetComponent<InputField>();        type.text = string.Empty;        GameObject engInput = GameObject.Find("EngInput");        InputField eng = engInput.GetComponent<InputField>();        eng.text = string.Empty;    }    public void ExitLevel()
    {
        SceneManager.LoadScene("GameStaging");
    }    public void ShowNext()    {        //Use the counter field. If the counter field > # of elements in list, then reset the counter.        counter++;        if(counter >= UIManagerScript.set.Count)        {            counter = 0;        }        UIManagerScript.FlashCard fc = (UIManagerScript.FlashCard)UIManagerScript.set[counter];        GameObject answerText = GameObject.Find("AnswerText");        Text answer = answerText.GetComponent<Text>();        answer.text = fc.enWord + "\n(" + fc.enType + ")";        GameObject krText = GameObject.Find("krText");        Text kr = krText.GetComponent<Text>();        kr.text = fc.krWord;        print(fc.fcid);        loadAudio(fc.fcid);        loadImage(fc.fcid);        WordCounter.GetComponent<Text>().text = counter + 1 + "/" + sizeofSet;        RatingsText.GetComponent<Text>().text = fc.totalRating1 + "\n" + fc.totalRating2 + "\n" + fc.totalRating3;        ClearFields();        HideAnswers();

    }    public void HideAnswers()    {        AnswersPanel.SetActive(false);    }    public void ShowAnswers()    {        AnswersPanel.SetActive(true);    }    public void showKrKeyboard()
    {
        if (KrKeyboard.activeSelf)
        {
            KrKeyboard.SetActive(false);
        }
        else
        {
            KrKeyboard.SetActive(true);
        }
    }    public void loadAudio(string id)    {       string audiofile = "audio/" + id;       AudioClip ac = (AudioClip) Resources.Load(audiofile);       print(ac.ToString());       GameObject audioB = GameObject.Find("AudioButton");       audioB.GetComponent<AudioSource>().clip = ac;    }    public void loadImage(string id)    {        string imgfile = "image/" + id;        Texture2D img = (Texture2D)Resources.Load(imgfile);        GameObject imageB = GameObject.Find("Graphic");        Sprite imgsprite = Sprite.Create(img, new Rect(0f, 0f, img.width, img.height), Vector2.zero);        imageB.GetComponent<Image>().sprite = imgsprite;    }    public void playAudio()    {        GameObject audioB = GameObject.Find("AudioButton");        audioB.GetComponent<AudioSource>().Play();    }    public void recordAudio()    {        RecordedButton.GetComponent<AudioSource>().clip = Microphone.Start("Built-in Microphone", true, 10, 44100);        //Show the stop button in place of the record button        RecordButton.SetActive(false);        StopRecord.SetActive(true);    }    public void stopRecording()    {        Microphone.End("Built-in Microphone");        //Show record button again        RecordButton.SetActive(true);        StopRecord.SetActive(false);            }    public void playRecordedAudio()    {        GameObject recordedB = GameObject.Find("RecordedButton");        recordedB.GetComponent<AudioSource>().Play();    }}