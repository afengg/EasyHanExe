using UnityEngine;using System.Collections;using UnityEngine.SceneManagement;using UnityEngine.UI;using System.IO;using System.Text;public class UIManagerScript : MonoBehaviour{    public class FlashCard    {        public string enWord;        public string krWord;        public string enType;        public string fcid;        public int totalRating1;        public int totalRating2;        public int totalRating3;        //public string pictureFileName;        //public string audioFileName;        public FlashCard(string id, string en, string kr, string typed, int total1, int total2, int total3)        {            fcid = id;            enWord = en;            krWord = kr;            enType = typed;            totalRating1 = total1;            totalRating2 = total2;            totalRating3 = total3;        }        public FlashCard()        {            enWord = "?";        }    }    public static string CurrentLevel;    public static ArrayList set;    void Start()    {        var globe = GameObject.Find("globe");        globe.GetComponent<Renderer>().enabled = false;        var house = GameObject.Find("house");        house.GetComponent<Renderer>().enabled = false;        CurrentLevel = "L1";    }    public void StartGame()    {        SceneManager.LoadScene("L1");        UIManagerScript.set = loadFlashCards(CurrentLevel);    }    public ArrayList loadFlashCards(string level)    {        ArrayList set = new ArrayList();        //Check if the level is the special case "free play"        if (level.Equals("Free Play"))        {            set = loadAllFlashCards();            return set;        }        else {            string line;            print(level);            string filename = "./Assets/Resources/" + level + ".txt";            StreamReader reader = new StreamReader(filename, Encoding.UTF8);            using (reader)            {                // While there's lines left in the text file, do this:                do                {                    line = reader.ReadLine();                    if (line != null)                    {                        string[] entries = line.Split('/');                        FlashCard fc = new FlashCard(entries[0], entries[1], entries[2], entries[3], 0, 0, 0);                        set.Add(fc);                        print(entries[0] + "," + entries[1] + "," + entries[2]);                    }                }                while (line != null);                // Done reading, close the reader and return true to broadcast success                    reader.Close();                return set;            }        }    }    public ArrayList loadAllFlashCards()    {        ArrayList set = new ArrayList();        string line;        string filename = "./Assets/Resources/L1.txt";        StreamReader reader = new StreamReader(filename, Encoding.UTF8);        using (reader)        {            // While there's lines left in the text file, do this:            do            {                line = reader.ReadLine();                if (line != null)                {                    string[] entries = line.Split('/');                    FlashCard fc = new FlashCard(entries[0], entries[1], entries[2], entries[3], 0, 0, 0);                    set.Add(fc);                    print(entries[0] + "," + entries[1] + "," + entries[2]);                }            }            while (line != null);            reader.Close();        }        filename = "./Assets/Resources/L2.txt";        reader = new StreamReader(filename, Encoding.UTF8);        using (reader)        {            // While there's lines left in the text file, do this:            do            {                line = reader.ReadLine();                if (line != null)                {                    string[] entries = line.Split('/');                    FlashCard fc = new FlashCard(entries[0], entries[1], entries[2], entries[3], 0, 0, 0);                    set.Add(fc);                    print(entries[0] + "," + entries[1] + "," + entries[2]);                }            }            while (line != null);            reader.Close();        }        filename = "./Assets/Resources/L3.txt";        reader = new StreamReader(filename, Encoding.UTF8);        using (reader)        {            // While there's lines left in the text file, do this:            do            {                line = reader.ReadLine();                if (line != null)                {                    string[] entries = line.Split('/');                    FlashCard fc = new FlashCard(entries[0], entries[1], entries[2], entries[3], 0, 0, 0);                    set.Add(fc);                    print(entries[0] + "," + entries[1] + "," + entries[2]);                }            }            while (line != null);            reader.Close();        }        return set;    }    public void DisplayNextLevel()    {        var levelName = GameObject.Find("LevelName");        Text txt = levelName.GetComponent<Text>();        var globe = GameObject.Find("globe");        var school = GameObject.Find("school");        var house = GameObject.Find("house");        switch (CurrentLevel)        {            case "L1":                CurrentLevel = "L2";                txt.text = "Level 2: Countries";                globe.GetComponent<Renderer>().enabled = true;                school.GetComponent<Renderer>().enabled = false;                break;            case "L2":                CurrentLevel = "L3";                txt.text = "Level 3: Home";                globe.GetComponent<Renderer>().enabled = false;                house.GetComponent<Renderer>().enabled = true;                break;            case "L3":                CurrentLevel = "Free Play";                txt.text = "Free Play";                house.GetComponent<Renderer>().enabled = false;                break;            case "Free Play":                CurrentLevel = "L1";                txt.text = "Level 1: School";                school.GetComponent<Renderer>().enabled = true;                break;                      default:                break;        }    }}